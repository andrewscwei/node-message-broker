name: CD
on:
  push:
    tags: ["v*"]
  release:
    types: [published]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: node:17.5.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-cache-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install NPM dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Persist build dir
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
  test:
    name: Test
    needs: [build]
    runs-on: ubuntu-latest
    container: docker/compose:1.22.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test
        run: docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit
  deploy:
    name: Deploy
    needs: [build, test]
    runs-on: ubuntu-latest
    container: node:17.5.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore build dir
        uses: actions/download-artifact@v1
        with:
          name: build
      - uses: actions/setup-node@v1
        with:
          registry-url: https://npm.pkg.github.com
      - name: Deploy
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: RELEASE.md
          draft: false
          prerelease: false
  notify:
    name: Notify
    needs: [build, test, deploy]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: andrewscwei/slack-action@v1.0.0
        with:
          success: ${{ needs.build.result == 'success' && needs.test.result == 'success' && needs.deploy.result == 'success' }}
          webhook-url: ${{ secrets.SLACK_DEVOPS_WEBHOOK_URL }}
